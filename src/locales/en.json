{
  "firstName": "Erika",
  "lastName": "Marttinen",
  "aboutMe": "About Me",
  "experience": "Experience",
  "projects": "Projects",
  "programming": "Programming",
  "contactMe": "Contact me via e-mail",
  "email": "erika dot marttinen at outlook dot com",
  "in-hi": "Hi, I'm",
  "in-desc": "a Computer Science student at Aalto University",
  "ab-desc-0": "I am an ambitious second year bachelor student at Aalto University, majoring in Computer Science. My minors are Quantum Technology, and Digital Systems and Design. So far, my favorite courses have been Programming Parallel Computers and Computer Graphics, both of which challenged my logic and creativity. In my third year, I am especially looking forward to familiarizing myself with the abstractions of information security.",
  "ab-desc-1": "My programming experience ranges from high-level languages, such as TypeScript and Scala, to lower-level languages, such as C and Rust. Currently I am gaining experience as a full-stack web developer in a 7-member scrum team in a year-long university course. Additionally, I’ve had the opportunity to design the UI of some projects, including this website.",
  "ab-desc-2": "Alongside my studies, I enjoy being involved in the Computer Science Guild’s activities and singing in the university choir Dominante. You may also find me either playing video games or exploring memes on Reddit.",
  "ex-us": "University studies",
  "ex-us-aalto": "Aalto University",
  "ex-us-aalto-date": "September 2020 —",
  "ex-us-aalto-cs": "Major: Computer Science",
  "ex-us-aalto-dsd": "Minor: Quantum Technology",
  "ex-us-aalto-qt": "Minor: Digital Systems and Design",
  "ex-rc": "Relevant Courses",
  "ex-rc-cs": "Computer Science",
  "ex-rc-cs-dsa": "Data Structures and Algorithms",
  "ex-rc-cs-ppc": "Programming Parallel Computers",
  "ex-rc-cs-cg": "Computer Graphics",
  "ex-rc-cs-swp": "Software Project",
  "ex-rc-cs-ps": "Programming Studio 1+2",
  "ex-rc-cs-db": "Databases",
  "ex-rc-dsd": "Digital Systems and Design",
  "ex-rc-dsd-sns": "Signals and Systems",
  "ex-rc-dsd-erts": "Embedded Real-Time Systems",
  "ex-pe": "Past Employment",
  "ex-pe-efi": "Eficode",
  "ex-pe-efi-date": "August 2020",
  "ex-pe-efi-desc": "UI-designer summer trainee",
  "pr-viewDesc": "View detailed description",
  "pr-viewGH": "View on GitHub",
  "pr-3d": "3D viewer",
  "pr-3d-summary": "A Wavefront OBJ file viewer written in Scala",
  "pr-3d-desc-0": "This is a CPU rendered 3D Wavefront OBJ file viewer. You can load an object into a virtual scene containing two different types of lights. Using key and mouse controls, it is possible to freely fly around the object.",
  "pr-3d-desc-1": "Everything except the GUI and window library is written from scratch. This was originally a university project, where no other libraries were permitted. Transformations and lighting computation uses my own linear algebra primitives and rotations are handled by quaternions. The .obj file parser is also handcrafted by me, and the application supports rendering non-convex objects.",
  "pr-3d-desc-2": "My focus on this project was to build an expandable and flexible object-oriented program. The GUI is straightforward and easy to operate. This was my first proper project developed from start to finish, and the version control history shows just how much I learned. Everything from designing the program architecture to building a class structure was new to me. Working on this project really broadened my knowledge on how a modular end-to-end project should be approached.",
  "pr-dso": "DSO display app",
  "pr-dso-summary": "A virtual display application for the Voltcraft DSO 4022 oscilloscope written in Rust",
  "pr-dso-desc-0": "This is a hardware accelerated virtual display application for an oscilloscope. It’s written in Rust and uses OpenGL for rendering, and is currently still work in progress.",
  "pr-dso-desc-1": "The application reads display data from the oscilloscope, uploads it to the GPU and renders it to a texture asynchronously. The final composited scene, which supports transparency and color palette reassignment, is then shown on the user’s screen. The application uses an external OpenGL wrapper library, which also handles the windowing.",
  "pr-dso-desc-2": "My main focus was to expand my Rust skills, as the language interests me. Additionally, as computer graphics fascinates me, I chose to take the more difficult path of writing semi-low-level OpenGL myself.",
  "pg-scala": "Scala",
  "pg-rust": "Rust",
  "pg-c": "C/C++",
  "pg-vue": "Vue/Vuetify",
  "pg-script": "TypeScript"
}
